syntax = "proto3";

package LLVM.TDG;

// Some static information at the head.
message Region {
  string name = 1;
  string parent = 2;
  repeated uint64 bbs = 3;
}
message StaticInformation {
  string module = 1;
  repeated Region regions = 2;
}

message TDGInstructionDependence {
  enum DependenceType {
    // Default dependence type.
    REGISTER = 0;
    MEMORY = 1;
    CONTROL = 2;
    // ADFA dependence type.
    POST_DOMINANCE_FRONTIER = 3;
    INDUCTION_VARIABLE = 4;
    REDUCTION_VARIABLE = 5;
    // Stream dependence type.
    STREAM = 6;
  }
  DependenceType type = 1;
  uint64 dependent_id = 2;
}

message TDGInstruction {
  string op = 1;
  uint64 id = 2;
  uint64 bb = 3;
  uint64 pc = 4;
  repeated TDGInstructionDependence deps = 8;
  // repeated uint64 reg_deps = 8;
  // repeated uint64 used_stream_ids = 9;
  // repeated uint64 mem_deps = 10;
  // repeated uint64 ctr_deps = 11;
  oneof extra {
    StoreExtra store = 32;
    LoadExtra load = 33;
    AllocExtra alloc = 34;
    BranchExtra branch = 35;
    ADFAConfigExtra adfa_config = 36;
    StreamConfigExtra stream_config = 37;
    StreamStepExtra stream_step = 38;
    StreamStoreExtra stream_store = 39;
    StreamEndExtra stream_end = 40;
  }

  message StoreExtra {
    uint64 addr = 1;
    uint64 size = 2;
    string base = 3;
    uint64 offset = 4;
    bytes value = 5;
  }

  message LoadExtra {
    uint64 addr = 1;
    uint64 size = 2;
    string base = 3;
    uint64 offset = 4;
    string new_base = 5;
  }

  message AllocExtra {
    uint64 addr = 1;
    uint64 size = 2;
    string new_base = 3;
  }

  message BranchExtra {
    uint64 static_id = 1;
    string next_bb = 2;
  }

  // ADFA instructions.
  message ADFAConfigExtra {
    string data_flow = 1;
    uint64 start_pc = 2;
  }

  message StreamConfigExtra {
    string stream_name = 1;
    uint64 stream_id = 2;
    string info_path = 3;
  }

  message StreamStepExtra { uint64 stream_id = 1; }

  message StreamStoreExtra { uint64 stream_id = 1; }

  message StreamEndExtra { uint64 stream_id = 1; }
}

message TDG { repeated TDGInstruction instructions = 1; }